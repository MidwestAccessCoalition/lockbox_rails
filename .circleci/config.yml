# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: lockbox_rails_test
          RAILS_ENV: test
          NODE_ENV: test
      - image: postgres:11.2
        environment:
          POSTGRES_USER: lockbox_rails_test
          POSTGRES_DB: lockbox_rails_test
          POSTGRES_PASSWORD: ""
          RAILS_ENV: test
          NODE_ENV: test

    working_directory: ~/repo

    parameters:
      bundler-audit-ignore:
        description: Known vulnerabilities to ignore
        type: string
        default: CVE-2017-1002201

    steps:
      - checkout

      # Install and cache dependencies
      - run: bundle clean --force # Recommended here: https://circleci.com/docs/2.0/caching/#bundler-ruby
      # Ruby
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies- # fallback to using the latest cache if no exact match is found
      - run:
          name: Install bundler
          command: gem install bundler -v 2.1.4
      - run:
          name: Install Ruby dependencies
          command: |
            bundle config set path 'vendor/bundle' &&
            bundle install --jobs=4 --retry=3
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # Javascript
      - restore_cache:
          keys:
            - cache-yarn-{{ checksum "yarn.lock" }}
            - cache-yarn-
      - run:
          name: Install JS dependencies
          command: yarn install --cache-folder ~/.yarn-cache
      - save_cache:
          paths:
            - ~/.yarn-cache
          key: cache-yarn-{{ checksum "yarn.lock" }}
      - run:
          name: Compile JS assets
          command: NODE_ENV=test bundle exec rails webpacker:compile

      # Database setup
      - run:
          name: Set up database
          command: bundle exec rake db:create db:schema:load

      # Run security scans
      - run:
          name: Bundler audit scan
          command: >
            bundle exec bundle-audit check --update <<# parameters.bundler-audit-ignore >>
            --ignore << parameters.bundler-audit-ignore >> <</ parameters.bundler-audit-ignore >>
      - run:
          name: Brakeman scan
          command: bundle exec brakeman -A --no-exit-on-warn
      - run:
          name: DangerJS scan
          command: echo "Not yet implemented"

      # Run tests!
      - run:
          name: bundle exec rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
          timeout: 2400

      # Collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: ~/repo/tmp/screenshots
          destination: screenshots
      - store_artifacts:
          path: coverage

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku (Staging)
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git trunk:master

workflows:
  version: 2.1
  build-deploy:
    jobs:
      - build
      # - deploy:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: trunk
