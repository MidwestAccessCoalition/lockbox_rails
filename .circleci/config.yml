# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  bundler-audit:
    docker:
      - image: circleci/ruby:2.6.5
    working_directory: ~/repo
    description: Runs bundle-audit to check gem security
    parameters:
      ignore:
        description: Vulnerabilities to ignore
        type: string
        default: CVE-2017-1002201
    steps:
      - run:
          name: Dependencies security audit
          command: >
            bundle exec bundle-audit check --update <<# parameters.ignore >>
            --ignore << parameters.ignore >> <</ parameters.ignore >>
  brakeman-scan:
  ruby-scans:
    docker:
      - image: circleci/ruby:2.6.5
    working_directory: ~/repo
    steps:
      - run:
          name: Install bundler-audit
          command: gem install bundler-audit
      - run:
          name: Run bundler-audit
          command: bundler-audit check --update > ~/repo/log/bundler-audit.log
      - run:
          name: Install brakeman
          command: gem install brakeman
      - run:
          name: Run brakeman
          command: brakeman -A -o ~/repo/log/brakeman.log
  js-scans:
    docker:
      - image: circleci/node:10.15.3
    steps:
      - run:
          name: DangerJS
          command: yarn danger ci
      - run:
          name:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: lockbox_rails_test
          RAILS_ENV: test
          NODE_ENV: test
      - image: postgres:11.2
        environment:
          POSTGRES_USER: lockbox_rails_test
          POSTGRES_DB: lockbox_rails_test
          POSTGRES_PASSWORD: ""
          RAILS_ENV: test
          NODE_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install latest bundler
          command: |
            gem install bundler

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: Yarn
          command: |
            yarn install

      # Store yarn / webpacker cache
      - save_cache:
          paths:
          - ~/.yarn-cache
          key: cache-yarn-{{ checksum "yarn.lock" }}

      - run:
          name: Boot up server
          command: |
            NODE_ENV=test bundle exec rails webpacker:compile

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: bundle exec rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
          timeout: 2400

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: ~/repo/tmp/screenshots
          destination: screenshots
      - store_artifacts:
          path: coverage

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku (Staging)
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git trunk:master

workflows:
  version: 2
  build-only:
    jobs:
      - build
      # - deploy:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: trunk
  security-scans:
    jobs:
      - bundler-audit
      - brakeman-scan
